@using Optimizely.PageTypes._BasePageConfig;
@model IPageViewModel<SitePageData>

<!DOCTYPE html>
<html lang="@(Model.CurrentPage.Language)">
<head>
    <title>@Model.CurrentPage.MetaTitle</title>
    @Html.RenderMetaTags(Model.CurrentPage.MetaDescription, Model.CurrentPage.MetaKeywords)
    @Html.CanonicalLink()
    @Html.AlternateLinks()
    @*<link rel="stylesheet" href="~/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/style.min.css" />
    <link rel="stylesheet" href="~/css/theme.min.css" />
    <link rel="shortcut icon" href="~/favicon.ico" type="image/x-icon" />*@
    @*<required-client-resources area="Header" />*@
</head>

<body>
   @* @if (Model.Layout.IsInReadonlyMode)
    {
        await Html.RenderPartialAsync("Readonly", Model);
    }*@

    @await Html.RenderEPiServerQuickNavigatorAsync()

    @*@Html.FullRefreshPropertiesMetaData()*@

    @{ await Html.ConditionalRenderPartialAsync("Header", !Model.Layout.HideHeader, Model); }

    <div class="container">
        @RenderBody()
    </div>

    @{ await Html.ConditionalRenderPartialAsync("Footer", !Model.Layout.HideFooter, Model); }

    @*<required-client-resources area="Footer" />*@
    @*<script src="~/js/bootstrap.bundle.min.js"></script>*@
</body>
</html>
