@using Optimizely.PageTypes._BasePageConfig;
@model IPageViewModel<SitePageData>

<!DOCTYPE html>
<html lang="@(Model.CurrentPage.Language)">
<head>
    <title>@Model.CurrentPage.MetaTitle</title>
    @Html.RenderMetaTags(Model.CurrentPage.MetaDescription, Model.CurrentPage.MetaKeywords)
    @Html.CanonicalLink()
    @Html.AlternateLinks()
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@picocss/pico@1/css/pico.min.css">
    <link rel="shortcut icon" href="~/favicon.ico" type="image/x-icon" />
    @*<required-client-resources area="Header" />*@
</head>

<body>
   @* @if (Model.Layout.IsInReadonlyMode)
    {
        await Html.RenderPartialAsync("Readonly", Model);
    }*@

    @await Html.RenderEPiServerQuickNavigatorAsync()

    @*@Html.FullRefreshPropertiesMetaData()*@

    <div class="container">
        @{
            await Html.ConditionalRenderPartialAsync("Header/Header", !Model.Layout.HideHeader, Model);
        }

        @RenderBody()

        @{
            await Html.ConditionalRenderPartialAsync("Footer/Footer", !Model.Layout.HideFooter, Model);
        }
    </div>

    @*<required-client-resources area="Footer" />*@
</body>
</html>
