@using Optimizely.PageTypes._BasePageConfig;
@model IPageViewModel<SitePageData>

<!DOCTYPE html>
<html lang="@(Model.CurrentPage.Language)">
<head>
    <title>@Model.CurrentPage.MetaTitle</title>
    @Html.RenderMetaTags(Model.CurrentPage.MetaDescription, Model.CurrentPage.MetaKeywords)
    @Html.CanonicalLink()
    @Html.AlternateLinks()
    
    <link rel="stylesheet" href="~/styles.css" /> @*global styles*@
    <link rel="stylesheet" href="~/Optimizely.styles.css" /> @*dynamically created view-scoped styles*@

    <link rel="shortcut icon" href="~/favicon.ico" type="image/x-icon" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@100;400;700&display=swap" rel="stylesheet">

    @*<required-client-resources area="Header" />*@
</head>

<body>
   @* @if (Model.Layout.IsInReadonlyMode)
    {
        await Html.RenderPartialAsync("Readonly", Model);
    }*@

    @await Html.RenderEPiServerQuickNavigatorAsync()

    @*@Html.FullRefreshPropertiesMetaData()*@

    <div class="container">
        @{
            await Html.ConditionalRenderPartialAsync("Header/Header", !Model.Layout.HideHeader, Model);
        }

        @RenderBody()

        @{
            await Html.ConditionalRenderPartialAsync("Footer/Footer", !Model.Layout.HideFooter, Model);
        }
    </div>

    @*<required-client-resources area="Footer" />*@
</body>
</html>
